// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: morai/sensor/sensor_settings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor {

  /// <summary>Holder for reflection information generated from morai/sensor/sensor_settings.proto</summary>
  public static partial class SensorSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for morai/sensor/sensor_settings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SensorSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJtb3JhaS9zZW5zb3Ivc2Vuc29yX3NldHRpbmdzLnByb3RvEhRtb3JhaV9z",
            "aW1fYXBpLnNlbnNvchoebW9yYWkvc2Vuc29yL3NlbnNvcl9pbmZvLnByb3Rv",
            "Gh5tb3JhaS9zZW5zb3Ivc2Vuc29yX2VudW0ucHJvdG8aJG1vcmFpL2NvbW1v",
            "bi9vYmplY3RfaWRlbnRpZmllci5wcm90byKXAQoNU2Vuc29yU2V0dGluZxI1",
            "CgtzZW5zb3JfaW5mbxgBIAEoCzIgLm1vcmFpX3NpbV9hcGkuc2Vuc29yLlNl",
            "bnNvckluZm8SQwoJZ3Rfc2Vuc29yGAIgASgLMi4ubW9yYWlfc2ltX2FwaS5z",
            "ZW5zb3IuR3JvdW5kVHJ1dGhTZW5zb3JTZXR0aW5nSABCCgoIU2V0dGluZ3Mi",
            "SgoRU2Vuc29yU2V0dGluZ0xpc3QSNQoIc2V0dGluZ3MYASADKAsyIy5tb3Jh",
            "aV9zaW1fYXBpLnNlbnNvci5TZW5zb3JTZXR0aW5nIq4CChhHcm91bmRUcnV0",
            "aFNlbnNvclNldHRpbmcSNQoKc2hhcGVfdHlwZRgBIAEoDjIhLm1vcmFpX3Np",
            "bV9hcGkuc2Vuc29yLkdUU2hhcGVUeXBlEkEKEGN5bGluZGVyX3NldHRpbmcY",
            "AiABKAsyJy5tb3JhaV9zaW1fYXBpLnNlbnNvci5HVEN5bGluZGVyU2V0dGlu",
            "ZxI5Cgxjb25lX3NldHRpbmcYAyABKAsyIy5tb3JhaV9zaW1fYXBpLnNlbnNv",
            "ci5HVENvbmVTZXR0aW5nEjcKBmZpbHRlchgEIAMoDjInLm1vcmFpX3NpbV9h",
            "cGkuc2Vuc29yLkdUT2JzdGFjbGVPYmpUeXBlEhEKCW1heF9jb3VudBgFIAEo",
            "BRIRCgl2aXpfcmFuZ2UYBiABKAgiSgoRR1RDeWxpbmRlclNldHRpbmcSEAoI",
            "c2VnbWVudHMYASABKAUSFAoMdmVydGljYWxfZm92GAIgASgCEg0KBXJhbmdl",
            "GAMgASgCIokBCg1HVENvbmVTZXR0aW5nEhAKCHNlZ21lbnRzGAEgASgFEhQK",
            "DHZlcnRpY2FsX2ZvdhgCIAEoAhIWCg5ob3Jpem9udGFsX2ZvdhgDIAEoAhIR",
            "CglyYW5nZV9taW4YBCABKAISEQoJcmFuZ2VfbWF4GAUgASgCEhIKCnJlc29s",
            "dXRpb24YByABKAUibwoWU2Vuc29yQ2FwdHVyZU1vZGVQYXJhbRIyCglzZW5z",
            "b3JfaWQYASABKAsyHy5tb3JhaV9zaW1fYXBpLk9iamVjdElkZW50aWZpZXIS",
            "IQoZaXNfc2Vuc29yX2NhcHR1cmVfbW9kZV9vbhgCIAEoCEItSAGqAihDb3Jl",
            "TGliLkdycGMuUHJvdG9idWYuTW9yYWlTaW1BUEkuU2Vuc29yYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorInfoReflection.Descriptor, global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorEnumReflection.Descriptor, global::CoreLib.Grpc.Protobuf.MoraiSimAPI.ObjectIdentifierReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSetting), global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSetting.Parser, new[]{ "SensorInfo", "GtSensor" }, new[]{ "Settings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSettingList), global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSettingList.Parser, new[]{ "Settings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting), global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting.Parser, new[]{ "ShapeType", "CylinderSetting", "ConeSetting", "Filter", "MaxCount", "VizRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTCylinderSetting), global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTCylinderSetting.Parser, new[]{ "Segments", "VerticalFov", "Range" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTConeSetting), global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTConeSetting.Parser, new[]{ "Segments", "VerticalFov", "HorizontalFov", "RangeMin", "RangeMax", "Resolution" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorCaptureModeParam), global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorCaptureModeParam.Parser, new[]{ "SensorId", "IsSensorCaptureModeOn" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 센서 설정을 위한 설정 값
  /// </summary>
  public sealed partial class SensorSetting : pb::IMessage<SensorSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorSetting> _parser = new pb::MessageParser<SensorSetting>(() => new SensorSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SensorSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorSetting(SensorSetting other) : this() {
      sensorInfo_ = other.sensorInfo_ != null ? other.sensorInfo_.Clone() : null;
      switch (other.SettingsCase) {
        case SettingsOneofCase.GtSensor:
          GtSensor = other.GtSensor.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorSetting Clone() {
      return new SensorSetting(this);
    }

    /// <summary>Field number for the "sensor_info" field.</summary>
    public const int SensorInfoFieldNumber = 1;
    private global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorInfo sensorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorInfo SensorInfo {
      get { return sensorInfo_; }
      set {
        sensorInfo_ = value;
      }
    }

    /// <summary>Field number for the "gt_sensor" field.</summary>
    public const int GtSensorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting GtSensor {
      get { return settingsCase_ == SettingsOneofCase.GtSensor ? (global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting) settings_ : null; }
      set {
        settings_ = value;
        settingsCase_ = value == null ? SettingsOneofCase.None : SettingsOneofCase.GtSensor;
      }
    }

    private object settings_;
    /// <summary>Enum of possible cases for the "Settings" oneof.</summary>
    public enum SettingsOneofCase {
      None = 0,
      GtSensor = 2,
    }
    private SettingsOneofCase settingsCase_ = SettingsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SettingsOneofCase SettingsCase {
      get { return settingsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSettings() {
      settingsCase_ = SettingsOneofCase.None;
      settings_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SensorSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SensorSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SensorInfo, other.SensorInfo)) return false;
      if (!object.Equals(GtSensor, other.GtSensor)) return false;
      if (SettingsCase != other.SettingsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sensorInfo_ != null) hash ^= SensorInfo.GetHashCode();
      if (settingsCase_ == SettingsOneofCase.GtSensor) hash ^= GtSensor.GetHashCode();
      hash ^= (int) settingsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sensorInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SensorInfo);
      }
      if (settingsCase_ == SettingsOneofCase.GtSensor) {
        output.WriteRawTag(18);
        output.WriteMessage(GtSensor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sensorInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SensorInfo);
      }
      if (settingsCase_ == SettingsOneofCase.GtSensor) {
        output.WriteRawTag(18);
        output.WriteMessage(GtSensor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sensorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SensorInfo);
      }
      if (settingsCase_ == SettingsOneofCase.GtSensor) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GtSensor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SensorSetting other) {
      if (other == null) {
        return;
      }
      if (other.sensorInfo_ != null) {
        if (sensorInfo_ == null) {
          SensorInfo = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorInfo();
        }
        SensorInfo.MergeFrom(other.SensorInfo);
      }
      switch (other.SettingsCase) {
        case SettingsOneofCase.GtSensor:
          if (GtSensor == null) {
            GtSensor = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting();
          }
          GtSensor.MergeFrom(other.GtSensor);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sensorInfo_ == null) {
              SensorInfo = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorInfo();
            }
            input.ReadMessage(SensorInfo);
            break;
          }
          case 18: {
            global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting subBuilder = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting();
            if (settingsCase_ == SettingsOneofCase.GtSensor) {
              subBuilder.MergeFrom(GtSensor);
            }
            input.ReadMessage(subBuilder);
            GtSensor = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sensorInfo_ == null) {
              SensorInfo = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorInfo();
            }
            input.ReadMessage(SensorInfo);
            break;
          }
          case 18: {
            global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting subBuilder = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GroundTruthSensorSetting();
            if (settingsCase_ == SettingsOneofCase.GtSensor) {
              subBuilder.MergeFrom(GtSensor);
            }
            input.ReadMessage(subBuilder);
            GtSensor = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SensorSettingList : pb::IMessage<SensorSettingList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorSettingList> _parser = new pb::MessageParser<SensorSettingList>(() => new SensorSettingList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SensorSettingList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSettingsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorSettingList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorSettingList(SensorSettingList other) : this() {
      settings_ = other.settings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorSettingList Clone() {
      return new SensorSettingList(this);
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSetting> _repeated_settings_codec
        = pb::FieldCodec.ForMessage(10, global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSetting.Parser);
    private readonly pbc::RepeatedField<global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSetting> settings_ = new pbc::RepeatedField<global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSetting>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSetting> Settings {
      get { return settings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SensorSettingList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SensorSettingList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!settings_.Equals(other.settings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= settings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      settings_.WriteTo(output, _repeated_settings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      settings_.WriteTo(ref output, _repeated_settings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += settings_.CalculateSize(_repeated_settings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SensorSettingList other) {
      if (other == null) {
        return;
      }
      settings_.Add(other.settings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            settings_.AddEntriesFrom(input, _repeated_settings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            settings_.AddEntriesFrom(ref input, _repeated_settings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// GroundTruth 센서 설정을 위한 값
  /// </summary>
  public sealed partial class GroundTruthSensorSetting : pb::IMessage<GroundTruthSensorSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroundTruthSensorSetting> _parser = new pb::MessageParser<GroundTruthSensorSetting>(() => new GroundTruthSensorSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroundTruthSensorSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSettingsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroundTruthSensorSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroundTruthSensorSetting(GroundTruthSensorSetting other) : this() {
      shapeType_ = other.shapeType_;
      cylinderSetting_ = other.cylinderSetting_ != null ? other.cylinderSetting_.Clone() : null;
      coneSetting_ = other.coneSetting_ != null ? other.coneSetting_.Clone() : null;
      filter_ = other.filter_.Clone();
      maxCount_ = other.maxCount_;
      vizRange_ = other.vizRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroundTruthSensorSetting Clone() {
      return new GroundTruthSensorSetting(this);
    }

    /// <summary>Field number for the "shape_type" field.</summary>
    public const int ShapeTypeFieldNumber = 1;
    private global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType shapeType_ = global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType.GtShapeUnspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType ShapeType {
      get { return shapeType_; }
      set {
        shapeType_ = value;
      }
    }

    /// <summary>Field number for the "cylinder_setting" field.</summary>
    public const int CylinderSettingFieldNumber = 2;
    private global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTCylinderSetting cylinderSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTCylinderSetting CylinderSetting {
      get { return cylinderSetting_; }
      set {
        cylinderSetting_ = value;
      }
    }

    /// <summary>Field number for the "cone_setting" field.</summary>
    public const int ConeSettingFieldNumber = 3;
    private global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTConeSetting coneSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTConeSetting ConeSetting {
      get { return coneSetting_; }
      set {
        coneSetting_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private static readonly pb::FieldCodec<global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTObstacleObjType> _repeated_filter_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTObstacleObjType) x);
    private readonly pbc::RepeatedField<global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTObstacleObjType> filter_ = new pbc::RepeatedField<global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTObstacleObjType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTObstacleObjType> Filter {
      get { return filter_; }
    }

    /// <summary>Field number for the "max_count" field.</summary>
    public const int MaxCountFieldNumber = 5;
    private int maxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "viz_range" field.</summary>
    public const int VizRangeFieldNumber = 6;
    private bool vizRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VizRange {
      get { return vizRange_; }
      set {
        vizRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroundTruthSensorSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroundTruthSensorSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShapeType != other.ShapeType) return false;
      if (!object.Equals(CylinderSetting, other.CylinderSetting)) return false;
      if (!object.Equals(ConeSetting, other.ConeSetting)) return false;
      if(!filter_.Equals(other.filter_)) return false;
      if (MaxCount != other.MaxCount) return false;
      if (VizRange != other.VizRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ShapeType != global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType.GtShapeUnspecified) hash ^= ShapeType.GetHashCode();
      if (cylinderSetting_ != null) hash ^= CylinderSetting.GetHashCode();
      if (coneSetting_ != null) hash ^= ConeSetting.GetHashCode();
      hash ^= filter_.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (VizRange != false) hash ^= VizRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShapeType != global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType.GtShapeUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ShapeType);
      }
      if (cylinderSetting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CylinderSetting);
      }
      if (coneSetting_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ConeSetting);
      }
      filter_.WriteTo(output, _repeated_filter_codec);
      if (MaxCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxCount);
      }
      if (VizRange != false) {
        output.WriteRawTag(48);
        output.WriteBool(VizRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShapeType != global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType.GtShapeUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ShapeType);
      }
      if (cylinderSetting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CylinderSetting);
      }
      if (coneSetting_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ConeSetting);
      }
      filter_.WriteTo(ref output, _repeated_filter_codec);
      if (MaxCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxCount);
      }
      if (VizRange != false) {
        output.WriteRawTag(48);
        output.WriteBool(VizRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ShapeType != global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType.GtShapeUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShapeType);
      }
      if (cylinderSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CylinderSetting);
      }
      if (coneSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConeSetting);
      }
      size += filter_.CalculateSize(_repeated_filter_codec);
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (VizRange != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroundTruthSensorSetting other) {
      if (other == null) {
        return;
      }
      if (other.ShapeType != global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType.GtShapeUnspecified) {
        ShapeType = other.ShapeType;
      }
      if (other.cylinderSetting_ != null) {
        if (cylinderSetting_ == null) {
          CylinderSetting = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTCylinderSetting();
        }
        CylinderSetting.MergeFrom(other.CylinderSetting);
      }
      if (other.coneSetting_ != null) {
        if (coneSetting_ == null) {
          ConeSetting = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTConeSetting();
        }
        ConeSetting.MergeFrom(other.ConeSetting);
      }
      filter_.Add(other.filter_);
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.VizRange != false) {
        VizRange = other.VizRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShapeType = (global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType) input.ReadEnum();
            break;
          }
          case 18: {
            if (cylinderSetting_ == null) {
              CylinderSetting = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTCylinderSetting();
            }
            input.ReadMessage(CylinderSetting);
            break;
          }
          case 26: {
            if (coneSetting_ == null) {
              ConeSetting = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTConeSetting();
            }
            input.ReadMessage(ConeSetting);
            break;
          }
          case 34:
          case 32: {
            filter_.AddEntriesFrom(input, _repeated_filter_codec);
            break;
          }
          case 40: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 48: {
            VizRange = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShapeType = (global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTShapeType) input.ReadEnum();
            break;
          }
          case 18: {
            if (cylinderSetting_ == null) {
              CylinderSetting = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTCylinderSetting();
            }
            input.ReadMessage(CylinderSetting);
            break;
          }
          case 26: {
            if (coneSetting_ == null) {
              ConeSetting = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.GTConeSetting();
            }
            input.ReadMessage(ConeSetting);
            break;
          }
          case 34:
          case 32: {
            filter_.AddEntriesFrom(ref input, _repeated_filter_codec);
            break;
          }
          case 40: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 48: {
            VizRange = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GTCylinderSetting : pb::IMessage<GTCylinderSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GTCylinderSetting> _parser = new pb::MessageParser<GTCylinderSetting>(() => new GTCylinderSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GTCylinderSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSettingsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GTCylinderSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GTCylinderSetting(GTCylinderSetting other) : this() {
      segments_ = other.segments_;
      verticalFov_ = other.verticalFov_;
      range_ = other.range_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GTCylinderSetting Clone() {
      return new GTCylinderSetting(this);
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 1;
    private int segments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Segments {
      get { return segments_; }
      set {
        segments_ = value;
      }
    }

    /// <summary>Field number for the "vertical_fov" field.</summary>
    public const int VerticalFovFieldNumber = 2;
    private float verticalFov_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VerticalFov {
      get { return verticalFov_; }
      set {
        verticalFov_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 3;
    private float range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GTCylinderSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GTCylinderSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Segments != other.Segments) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VerticalFov, other.VerticalFov)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Range, other.Range)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Segments != 0) hash ^= Segments.GetHashCode();
      if (VerticalFov != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VerticalFov);
      if (Range != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Range);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Segments != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Segments);
      }
      if (VerticalFov != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(VerticalFov);
      }
      if (Range != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Range);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Segments != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Segments);
      }
      if (VerticalFov != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(VerticalFov);
      }
      if (Range != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Range);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Segments != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Segments);
      }
      if (VerticalFov != 0F) {
        size += 1 + 4;
      }
      if (Range != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GTCylinderSetting other) {
      if (other == null) {
        return;
      }
      if (other.Segments != 0) {
        Segments = other.Segments;
      }
      if (other.VerticalFov != 0F) {
        VerticalFov = other.VerticalFov;
      }
      if (other.Range != 0F) {
        Range = other.Range;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Segments = input.ReadInt32();
            break;
          }
          case 21: {
            VerticalFov = input.ReadFloat();
            break;
          }
          case 29: {
            Range = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Segments = input.ReadInt32();
            break;
          }
          case 21: {
            VerticalFov = input.ReadFloat();
            break;
          }
          case 29: {
            Range = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GTConeSetting : pb::IMessage<GTConeSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GTConeSetting> _parser = new pb::MessageParser<GTConeSetting>(() => new GTConeSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GTConeSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSettingsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GTConeSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GTConeSetting(GTConeSetting other) : this() {
      segments_ = other.segments_;
      verticalFov_ = other.verticalFov_;
      horizontalFov_ = other.horizontalFov_;
      rangeMin_ = other.rangeMin_;
      rangeMax_ = other.rangeMax_;
      resolution_ = other.resolution_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GTConeSetting Clone() {
      return new GTConeSetting(this);
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 1;
    private int segments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Segments {
      get { return segments_; }
      set {
        segments_ = value;
      }
    }

    /// <summary>Field number for the "vertical_fov" field.</summary>
    public const int VerticalFovFieldNumber = 2;
    private float verticalFov_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VerticalFov {
      get { return verticalFov_; }
      set {
        verticalFov_ = value;
      }
    }

    /// <summary>Field number for the "horizontal_fov" field.</summary>
    public const int HorizontalFovFieldNumber = 3;
    private float horizontalFov_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HorizontalFov {
      get { return horizontalFov_; }
      set {
        horizontalFov_ = value;
      }
    }

    /// <summary>Field number for the "range_min" field.</summary>
    public const int RangeMinFieldNumber = 4;
    private float rangeMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RangeMin {
      get { return rangeMin_; }
      set {
        rangeMin_ = value;
      }
    }

    /// <summary>Field number for the "range_max" field.</summary>
    public const int RangeMaxFieldNumber = 5;
    private float rangeMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RangeMax {
      get { return rangeMax_; }
      set {
        rangeMax_ = value;
      }
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 7;
    private int resolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resolution {
      get { return resolution_; }
      set {
        resolution_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GTConeSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GTConeSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Segments != other.Segments) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VerticalFov, other.VerticalFov)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HorizontalFov, other.HorizontalFov)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RangeMin, other.RangeMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RangeMax, other.RangeMax)) return false;
      if (Resolution != other.Resolution) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Segments != 0) hash ^= Segments.GetHashCode();
      if (VerticalFov != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VerticalFov);
      if (HorizontalFov != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HorizontalFov);
      if (RangeMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RangeMin);
      if (RangeMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RangeMax);
      if (Resolution != 0) hash ^= Resolution.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Segments != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Segments);
      }
      if (VerticalFov != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(VerticalFov);
      }
      if (HorizontalFov != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(HorizontalFov);
      }
      if (RangeMin != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RangeMin);
      }
      if (RangeMax != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(RangeMax);
      }
      if (Resolution != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Resolution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Segments != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Segments);
      }
      if (VerticalFov != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(VerticalFov);
      }
      if (HorizontalFov != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(HorizontalFov);
      }
      if (RangeMin != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RangeMin);
      }
      if (RangeMax != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(RangeMax);
      }
      if (Resolution != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Resolution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Segments != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Segments);
      }
      if (VerticalFov != 0F) {
        size += 1 + 4;
      }
      if (HorizontalFov != 0F) {
        size += 1 + 4;
      }
      if (RangeMin != 0F) {
        size += 1 + 4;
      }
      if (RangeMax != 0F) {
        size += 1 + 4;
      }
      if (Resolution != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resolution);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GTConeSetting other) {
      if (other == null) {
        return;
      }
      if (other.Segments != 0) {
        Segments = other.Segments;
      }
      if (other.VerticalFov != 0F) {
        VerticalFov = other.VerticalFov;
      }
      if (other.HorizontalFov != 0F) {
        HorizontalFov = other.HorizontalFov;
      }
      if (other.RangeMin != 0F) {
        RangeMin = other.RangeMin;
      }
      if (other.RangeMax != 0F) {
        RangeMax = other.RangeMax;
      }
      if (other.Resolution != 0) {
        Resolution = other.Resolution;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Segments = input.ReadInt32();
            break;
          }
          case 21: {
            VerticalFov = input.ReadFloat();
            break;
          }
          case 29: {
            HorizontalFov = input.ReadFloat();
            break;
          }
          case 37: {
            RangeMin = input.ReadFloat();
            break;
          }
          case 45: {
            RangeMax = input.ReadFloat();
            break;
          }
          case 56: {
            Resolution = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Segments = input.ReadInt32();
            break;
          }
          case 21: {
            VerticalFov = input.ReadFloat();
            break;
          }
          case 29: {
            HorizontalFov = input.ReadFloat();
            break;
          }
          case 37: {
            RangeMin = input.ReadFloat();
            break;
          }
          case 45: {
            RangeMax = input.ReadFloat();
            break;
          }
          case 56: {
            Resolution = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SensorCaptureModeParam : pb::IMessage<SensorCaptureModeParam>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorCaptureModeParam> _parser = new pb::MessageParser<SensorCaptureModeParam>(() => new SensorCaptureModeParam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SensorCaptureModeParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreLib.Grpc.Protobuf.MoraiSimAPI.Sensor.SensorSettingsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorCaptureModeParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorCaptureModeParam(SensorCaptureModeParam other) : this() {
      sensorId_ = other.sensorId_ != null ? other.sensorId_.Clone() : null;
      isSensorCaptureModeOn_ = other.isSensorCaptureModeOn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorCaptureModeParam Clone() {
      return new SensorCaptureModeParam(this);
    }

    /// <summary>Field number for the "sensor_id" field.</summary>
    public const int SensorIdFieldNumber = 1;
    private global::CoreLib.Grpc.Protobuf.MoraiSimAPI.ObjectIdentifier sensorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CoreLib.Grpc.Protobuf.MoraiSimAPI.ObjectIdentifier SensorId {
      get { return sensorId_; }
      set {
        sensorId_ = value;
      }
    }

    /// <summary>Field number for the "is_sensor_capture_mode_on" field.</summary>
    public const int IsSensorCaptureModeOnFieldNumber = 2;
    private bool isSensorCaptureModeOn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSensorCaptureModeOn {
      get { return isSensorCaptureModeOn_; }
      set {
        isSensorCaptureModeOn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SensorCaptureModeParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SensorCaptureModeParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SensorId, other.SensorId)) return false;
      if (IsSensorCaptureModeOn != other.IsSensorCaptureModeOn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sensorId_ != null) hash ^= SensorId.GetHashCode();
      if (IsSensorCaptureModeOn != false) hash ^= IsSensorCaptureModeOn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sensorId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SensorId);
      }
      if (IsSensorCaptureModeOn != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSensorCaptureModeOn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sensorId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SensorId);
      }
      if (IsSensorCaptureModeOn != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSensorCaptureModeOn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sensorId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SensorId);
      }
      if (IsSensorCaptureModeOn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SensorCaptureModeParam other) {
      if (other == null) {
        return;
      }
      if (other.sensorId_ != null) {
        if (sensorId_ == null) {
          SensorId = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.ObjectIdentifier();
        }
        SensorId.MergeFrom(other.SensorId);
      }
      if (other.IsSensorCaptureModeOn != false) {
        IsSensorCaptureModeOn = other.IsSensorCaptureModeOn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sensorId_ == null) {
              SensorId = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.ObjectIdentifier();
            }
            input.ReadMessage(SensorId);
            break;
          }
          case 16: {
            IsSensorCaptureModeOn = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sensorId_ == null) {
              SensorId = new global::CoreLib.Grpc.Protobuf.MoraiSimAPI.ObjectIdentifier();
            }
            input.ReadMessage(SensorId);
            break;
          }
          case 16: {
            IsSensorCaptureModeOn = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
